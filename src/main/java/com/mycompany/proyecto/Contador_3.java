/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;

import javax.swing.*;
/**
 *
 * @author CCCU
 */
public class Contador_3 extends javax.swing.JFrame {
    private static Connection conn = null;

    /**
     * Creates new form Contador_3
     */
    public Contador_3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contadorlikeslabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        contadorlikeslabel.setText("Contador");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(contadorlikeslabel)
                .addContainerGap(225, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(contadorlikeslabel)
                .addContainerGap(266, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
 
     public static void main(String[] args) {
    // Crear el JFrame
        JFrame frame = new JFrame("Conexión a Base de Datos Access");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        // Crear el botón
        JButton button = new JButton("Gestionar Likes");
        
        // Agregar el ActionListener al botón
        button.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    // Paso 1: Registrar el controlador JDBC
                    Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");

                    // Paso 2: Establecer la conexión con la base de datos Access
                    String url = "jdbc:ucanaccess://" + ".\\src" + ".\\main" + ".\\java" + ".\\AbsoluteLayout" + ".\\DB_Instagram2.accdb";

                    conn = DriverManager.getConnection(url);

                    // Paso 3: Consultar el valor actual de ContadorLikes
                    String sql = "SELECT ContadorLikes FROM Publicaciones";
                    Statement stmt = conn.createStatement();
                    ResultSet rs = stmt.executeQuery(sql);
                    
                    int contadorLikes = 0;
              
                    if (rs.next()) {
                        contadorLikes = rs.getInt("ContadorLikes");
                    }

                   // Paso 4: Actualizar el valor de ContadorLikes
                    if (contadorLikes == 0 || contadorLikes == 1) {
                        // Si el contador es 0 o 1, cambiarlo al valor opuesto
                        sql = "UPDATE Publicaciones SET ContadorLikes = " + (contadorLikes == 0 ? 1 : 0);
                      
                    } else {
                        // Si el contador es diferente de 0 o 1, establecerlo en 1
                        sql = "UPDATE Publicaciones SET ContadorLikes = 1";
                        
                    }
                    stmt.executeUpdate(sql);
                    
                    // Mostrar un mensaje de confirmación
                    JOptionPane.showMessageDialog(frame, "Contador de likes actualizado.");

                } catch (Exception ex) {
                    ex.printStackTrace();
                } finally {
                    // Paso 5: Cerrar la conexión
                    if (conn != null) {
                        try {
                            conn.close();
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            }
        });

        // Agregar el botón al JFrame
        frame.getContentPane().add(button);
        
        // Configurar el tamaño y la visibilidad del JFrame
        frame.setSize(300, 200);
        frame.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel contadorlikeslabel;
    // End of variables declaration//GEN-END:variables
}
